"""Add Razorpay table

Revision ID: 17193e59656c
Revises: 40481f51ec19
Create Date: 2025-08-06 12:03:44.693614

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '17193e59656c'
down_revision: Union[str, Sequence[str], None] = '40481f51ec19'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('razorpay_customer_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('contact', sa.String(), nullable=False),
    sa.Column('gstin', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('modified_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('razorpay_customer_id')
    )
    op.create_index(op.f('ix_customers_id'), 'customers', ['id'], unique=False)
    op.create_table('plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('applicant_id', sa.Integer(), nullable=False),
    sa.Column('razorpay_plan_id', sa.String(), nullable=False),
    sa.Column('entity', sa.String(), nullable=True),
    sa.Column('period', sa.String(), nullable=False),
    sa.Column('interval', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.String(), nullable=True),
    sa.Column('item_name', sa.String(), nullable=False),
    sa.Column('item_amount', sa.Integer(), nullable=False),
    sa.Column('item_currency', sa.String(), nullable=True),
    sa.Column('item_description', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('plan_data', sa.JSON(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('modified_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['applicant_id'], ['loan_applicants.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('razorpay_plan_id')
    )
    op.create_index(op.f('ix_plans_applicant_id'), 'plans', ['applicant_id'], unique=False)
    op.create_index(op.f('ix_plans_id'), 'plans', ['id'], unique=False)
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('CREATED', 'ACTIVE', 'COMPLETED', 'CANCELLED', name='subscriptionstatus'), nullable=False),
    sa.Column('razorpay_subscription_id', sa.String(), nullable=False),
    sa.Column('entity', sa.String(), nullable=True),
    sa.Column('plan_id', sa.Integer(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('total_count', sa.Integer(), nullable=True),
    sa.Column('paid_count', sa.Integer(), nullable=True),
    sa.Column('remaining_count', sa.Integer(), nullable=True),
    sa.Column('start_at', sa.DateTime(), nullable=True),
    sa.Column('end_at', sa.DateTime(), nullable=True),
    sa.Column('charge_at', sa.DateTime(), nullable=True),
    sa.Column('expire_by', sa.DateTime(), nullable=True),
    sa.Column('customer_notify', sa.Boolean(), nullable=True),
    sa.Column('offer_id', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('short_url', sa.String(), nullable=True),
    sa.Column('has_scheduled_changes', sa.Boolean(), nullable=True),
    sa.Column('change_scheduled_at', sa.DateTime(), nullable=True),
    sa.Column('upcoming_invoice_id', sa.String(), nullable=True),
    sa.Column('addons', sa.JSON(), nullable=True),
    sa.Column('auth_attempts', sa.Integer(), nullable=True),
    sa.Column('subscription_data', sa.JSON(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('modified_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('razorpay_subscription_id')
    )
    op.create_index(op.f('ix_subscriptions_id'), 'subscriptions', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_subscriptions_id'), table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_index(op.f('ix_plans_id'), table_name='plans')
    op.drop_index(op.f('ix_plans_applicant_id'), table_name='plans')
    op.drop_table('plans')
    op.drop_index(op.f('ix_customers_id'), table_name='customers')
    op.drop_table('customers')
    # ### end Alembic commands ###
